1. 挖掘ELF文件
    - .text 段
        描述: 包含程序的可执行机器代码.
        特点: 此段通常为只读, 确保代码不会被程序运行时修改.
    
    - .data 段
        描述: 包含程序中的初始化全局变量和静态变量.
        特点: 此段在内存中可读写.
    
    - .bss 段
        描述: 包含未初始化的全局变量和静态变量.
        特点: 在程序启动前, 操作系统将此段中的内容初始化为零. 此段也是可读写的.
    
    - .rodata 段
        描述: 存放程序的只读数据, 例如常量字符串和其他常量数据.
        特点: 此段为只读, 防止数据在运行时被修改.
        
    - .heap 区域
        描述: 动态分配的内存(如通过 malloc, calloc 等函数分配)存储在堆区域.
        特点: 堆在运行时动态增长和缩减.
        
    - .stack 区域
        描述: 用于存储局部变量, 函数参数和其他函数调用相关的信息.
        特点: 栈在程序调用函数时动态增长, 退出函数时缩减.
        
    - .dynsym, .dynstr 和 .dynamic 段
        描述: 这些段包含动态链接信息, 如动态符号表(.dynsym), 字符串表(.dynstr)和动态链接器参数(.dynamic).
        特点: 这些信息用于在运行时解析库依赖关系和符号地址.
    
    - .rel.text 和 .rel.data 段
        描述: 包含重定位信息, 用于调整代码和数据引用的实际地址.
        特点: 这些段在静态或动态链接过程中非常重要, 以确保引用的正确性.
        
    - .got 和 .plt 段
        描述: 全局偏移表（Global Offset Table, GOT）和过程链接表（Procedure Linkage Table, PLT）用于动态链接.
        特点: .got 用于存储全局数据的地址, .plt 用于解析动态链接函数的地址.


2.  单独设立 .rodata 段, 不光是在语义上支持了C++的const关键字, 而且操作系统在加载的时候可以将 .rodata 段的属性映射成只读, 这样对于这个段
    的任何修改操作都会作为非法操作确定, 保证了程序的安全性.


3.  自定义段
    - 正常情况下, GCC编译出来的目标文件中, 代码会被放到 .text 段, 全局变量和静态变量会被放到 .data 和 .bss 段. GCC 提供了一个扩展机制,
      使得程序员可以指定变量所处的段.
    -  __attribute__((section("FOO"))) int global = 42
       __attribute__((section("BAR"))) void foo() {}
    -  objdump -x -s -d hello.o
