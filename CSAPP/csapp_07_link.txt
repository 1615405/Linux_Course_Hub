1. 链接是将各种代码和数据片段收集并组合成为一个单一文件的过程, 这个文件可被加载到内存中并执行. 
    1): 链接可以执行于编译时, 也就是在源代码被翻译成机器代码时;
    2): 链接也可以执行于加载时, 也就是在程序被加载器加载到内存并执行;
    3): 甚至执行于运行时, 也就是由应用程序来执行.
链接器在软件开发中扮演着一个关键的角色, 因为它们使得分离编译成为可能.

        
2. 大多数编译系统提供编译器驱动程序, 它代表用户在需要时调用语言预处理器, 编译器, 汇编器和链接器.
    1) 驱动程序首先运行C预处理器(cpp), 它将C的源程序main.c翻译成一个ASCII码的中间文件 main.i
        -> cpp [other arguments] main.c /tmp/main.i
        
    2) 接下来, 驱动程序运行C编译器(cc1), 它将 main.i 翻译成一个ASCII汇编语言文件 main.s
        -> cc1 /tmp/main.i -Og [other arguments] -o tmp/main.s
        
    3) 然后, 驱动程序运行汇编器(as), 它将main.s翻译成一个可重定位目标文件 main.o
        -> as [other arguments] -o /tmp/main.o /tmp/main.s
        
    4) 驱动程序经过相同的过程生成sum.o. 最后, 它运行链接器程序ld, 将 main.o 和 sum.o 以及一些必要的系统目标文件组合起来, 
    创建一个可执行目标文件prog.
        -> ld -o prog [system object files and args] /tmp/main.o /tmp/sum.o
        -> ld -static \
          /usr/lib/x86_64-linux-gnu/crt1.o \
          /usr/lib/x86_64-linux-gnu/crti.o \
          /usr/lib/gcc/x86_64-linux-gnu/11/crtbeginT.o \
          hello.o \
          -L/usr/lib/gcc/x86_64-linux-gnu/11 \
          -L/usr/lib/x86_64-linux-gnu \
          -start-group \
          -lgcc \
          -lgcc_eh \
          -lc \
          -end-group \
          /usr/lib/gcc/x86_64-linux-gnu/11/crtend.o \
          /usr/lib/x86_64-linux-gnu/crtn.o
        -> find /usr/lib -name crt1.o
        
    5) 要运行可执行文件prog, 在Linux Shell的命令行上输入它的名字
        linux> ./prog
        shell 调用操作系统中一个叫做加载器的函数, 它将可执行文件prog中的代码和数据复制到内存, 然后将控制转移到这个程序的开头.
